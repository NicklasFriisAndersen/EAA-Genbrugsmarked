@page "/profile"
@inject Blazored.LocalStorage.ILocalStorageService localStore
@inject HttpClient Http
@using Core.Models
@using System.Text.Json

<PageTitle>Profile</PageTitle>

<h1>My Profile</h1>
@if (user != null)
{
    <p id="name-of-user">Username: @user.Username</p>
    <p id="email-of-user">Email: @user.Email</p>
    if (user.Role == "Admin")
    {
        <p id="role-display-if-admin">Special Role: @user.Role</p>
    }
}
else
{
    <p>Please log in to view your profile.</p>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Description</th>
            <th>Edit</th> 
        </tr>
    </thead>
    <tbody>
        @foreach (var item in listingList ?? new Listing[0])
        {
            <tr>
                <td>@item.Title</td>
                <td>@item.Price</td>
                <td>@item.Description</td>
                <td><button @onclick="() => EditItem(item)">Edit</button></td>
            </tr>
        }
    </tbody>
</table>

@code {
    private User? user;
    private Listing[]? listingList = new Listing[0];
    private string serverUrl = "https://localhost:7231";

    protected override async Task OnInitializedAsync()
    {
        var userInfoJson = await localStore.GetItemAsStringAsync("userinfo");
        if (!string.IsNullOrEmpty(userInfoJson))
        {
            user = JsonSerializer.Deserialize<User>(userInfoJson);
        }

        listingList = await Http.GetFromJsonAsync<Listing[]>($"{serverUrl}/api/listing/getall");
    }

    private async Task EditItem(Listing item)
    {
        // Logic to edit the item
    }
}