@inject Blazored.LocalStorage.ILocalStorageService localStore
@using Core.Models;
@using System.Text.Json
@inject HttpClient Http;
@using System.Net
@page "/orders"
<h3>Orders</h3>
<table class="table table-striped">
    <thead>
    <tr>
        <th>Seller</th>
        <th>Date of purchase</th>
        <th>Listing details</th>
        <th>Remove from orders</th>
        
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Orderlist ?? new Order[0])
    {
        <tr>
            <td>@item.Listings.User.Username</td>
            <td>@item.OrderDate</td>
            <td><button class="btn btn-primary" @onclick="() => OpenOrderDialog(item.Listings)">See details</button></td>
            <td><button @onclick="() => DeleteOrder(item)">Delete</button></td>
        </tr>
    }
    </tbody>
</table>

<ModalDialog @ref="@OrderDialog" Title="Confirm Purchase">
    <div class="row p-3">
        <div class="col-md-12 mb-3">
                    <strong>Title:</strong>
                    <p>@currentOrderListing?.Title</p>
                </div>
                <div class="col-md-12 mb-3">
                    <strong>Price:</strong>
                    <p>@currentOrderListing?.Price.ToString()</p>
                </div>
                <div class="col-md-12 mb-3">
                    <strong>Description:</strong>
                    <p>@currentOrderListing?.Description</p>
                </div>
                <div class="col-md-12 mb-3">
                    <strong>Date Posted:</strong>
                    <p>@currentOrderListing?.DatePosted.ToString("yyyy-MM-dd")</p>
                </div>
                <div class="col-md-12 mb-3">
                    <strong>Category:</strong>
                    <p>@currentOrderListing?.Category</p>
                </div>
                <div class="col-md-12 mb-3">
                    <strong>Status:</strong>
                    <p>@currentOrderListing?.Status</p>
                </div>
                <div class="col-md-12 mb-3">
                    <strong>Location:</strong>
                    <p>@currentOrderListing?.Location?.Name</p>
                </div>
        <div class="col-12 mb-3">
            
            <button class="btn btn-secondary" @onclick="() => OrderDialog.Close()">Close</button>
        </div>
    </div>
</ModalDialog>

@code {
    private string serverUrl = "https://localhost:7231";

    private User? user;

    private Order[]? Orderlist = new Order[0];

    private Order OrderItem = new Order();
    
    private Listing? currentOrderListing;
    
    private ModalDialog? OrderDialog;
    
    protected override async Task OnInitializedAsync()
    {
        var userInfoJson = await localStore.GetItemAsStringAsync("userinfo");
        if (!string.IsNullOrEmpty(userInfoJson))
        {
            user = JsonSerializer.Deserialize<User>(userInfoJson);
        }
        //Orderlist = await Http.GetFromJsonAsync<Order[]>($"{serverUrl}/api/order/getall");
        FilterByUserId();
    }

    private async Task FilterByUserId()
    {
        var url = $"{serverUrl}/api/order/getbyuserid?userId={user.Id}";
        Orderlist = await Http.GetFromJsonAsync<Order[]>(url);
        StateHasChanged();
    }

    private void OpenOrderDialog(Listing listing)
    {
        currentOrderListing = listing;
        OrderDialog.Open();
    }
    
    private async Task DeleteOrder(Order order)
    {
        await Http.DeleteAsync($"{serverUrl}/api/order/deletebyid?orderId={order.Id}");
        StateHasChanged();
       await FilterByUserId();
    }
    
}